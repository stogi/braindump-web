{
  "name": "karma-handlebars-preprocessor",
  "version": "0.1.2",
  "description": "A Karma plugin. Compile handlebars template on the fly.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/petrbela/karma-handlebars-preprocessor.git"
  },
  "keywords": [
    "karma-plugin",
    "preprocessor",
    "handlebars"
  ],
  "authors": [
    "hanachin <hanachin@gmail.com>",
    "Petr Bela <github@petrbela.com>"
  ],
  "dependencies": {
    "handlebars": "1.0.12"
  },
  "peerDependencies": {
    "karma": ">=0.9"
  },
  "devDependencies": {
    "coffee-script": "~1.6.3",
    "mocha": "~1.12.0",
    "chai": "~1.7.2"
  },
  "license": "MIT",
  "readme": "# karma-handlebars-preprocessor\n\n> Preprocessor to compile Handlebars on the fly.\n\nForked from [hanachin's code](https://github.com/hanachin/karma-handlebars-preprocessor) (kudos!)\n\nOnly works with **Karma 0.9 or later** which enables custom plugins.\n\nFor more information on Karma see the [homepage].\n\n\n## Installation\n\n1. Install Karma and karma-osx-reporter plugin. The plugin requires Karma 0.9+, but Karma's stable version is now 0.10 so it's pretty easy.\n\n  a. Globally. System-wide with `karma` available on command line.\n\n    ```\n    npm install -g karma\n    npm install -g karma-handlebars-preprocessor\n    ```\n\n  b. Locally. If you want to install Karma to your project instead, add the dependencies to `package.json` and run `npm install`:\n\n    ```js\n    \"devDependencies\": {\n      \"karma\": \">=0.9\",\n      \"karma-handlebars-preprocessor\": \"*\"\n    }\n    ```\n\n    If you install locally, you'll need to run Karma using `node_modules/.bin/karma`.\n\n  In any case, the plugin needs to be installed as a peer dependency to Karma (i.e. in the sibling folder). This just means you cannot use global Karma with local plugins or vice-versa.\n\n\n4. Define it as a reporter in the config file\n\n  ```js\n    preprocessors: {\n      '**/*.hbs': 'handlebars'\n    }\n  ```\n\n  or pass through the command line\n\n  ```sh\n    $ karma start --preprocessors handlebars karma.conf.js\n  ```\n\n\n## Configuration\n\nYou can configure default behaviour in the `handlebarsPreprocessor` section of the config file. The following shows the default implementation:\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    preprocessors: {\n      '**/*.hbs': ['handlebars']\n    },\n\n    handlebarsPreprocessor: {\n\n      // name of the variable to store the templates hash\n      templates: \"Handlebars.templates\",\n\n      // translates original file path to template name\n      templateName: function(filepath) {\n        return filepath.replace(/^.*\\/([^\\/]+)\\.hbs$/, '$1');\n      },\n\n      // transforms original file path to path of the processed file\n      transformPath: function(path) {\n        return path.replace(/\\.hbs$/, '.js');\n      }\n      \n    }\n  });\n};\n```\n\n## Note on version\n\nThis plugin precompiles templates using handlebars.js version `1.0.0`. You'll need to provide handlebars.runtime.js of the same version in your page.\n\n\n## License\n\nMIT License\n\n\n[homepage]: http://karma-runner.github.io\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/petrbela/karma-handlebars-preprocessor/issues"
  },
  "_id": "karma-handlebars-preprocessor@0.1.2",
  "_from": "karma-handlebars-preprocessor@"
}
